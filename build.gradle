plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.authsphere'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// PostgreSQL
	implementation 'org.postgresql:postgresql'
	// H2 Database
	//implementation 'com.h2database:h2'
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	// Spring Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Lombok Test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}
